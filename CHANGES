- Changed code to enable Revert Changes button when the Auto-Commit checkbox is not checked and only when there are changes pending to be committed.
  (Internal bug 92 - Edit Data, Revert Changes button remains enabled even if there are no changes to revert).
- Added code to reset all cells in the Editing Region to have a NO-FILL style when the Edit Data dialog is closed.
  (Internal bug 70 - Committed/uncommitted cells remain colored when exiting Edit Data Mode).
- Added code to enable rows deletion on Edit Data, before all cells except the ones containing MySQL data were locked, but that way users can't delete an Excel row
  since the row contained locked cells and Excel does not permit deleting a row if even once cell in the row is locked, so now all rows with MySQL data are unlocked
  but if cells that are not in the Editing Range are modified an error will be thrown and changes undone. All other cells below the Editing Range remain locked.
  (Internal bug 68 - There is no way to delete an existing row when Editing a table).
- Add a new Workbook if there is no workbook open when doing an Edit and Import Data. Also makes the release of the Uncompleted edit operations when closing a Workbook. 
  Added new events Workbook Activated and Workbook Deactivated in TaskPaneControl. Changes in EditTableData method to release uncompleted edit operations. Added a new
  WorkbookName property to identify sheets in EditDataDialog. Also added unattached of the EditingWorksheet.SelectionChange when exiting from edit mode to avoid
  Exceptions. Changes to reference ActiveWorkbook to the TaskPaneControl correct property.
  (Internal Bug 66 - Edit and Import Data throw an unhandled exception when there is no active worksheet).
- Added code to support rows insertions within the Edit Data, as per design this works by always having a colored row at the end of the editing data range which if
  modified it will create a new row for insertion into MySQL Server when data is committed. (Internal bug 67 - There is no way to insert a new row when Editing a table).
- Changed the comparison of strategy for the value the user types in an Excel cell against the value already stored in the DataTable but now using the RowState.Original
  version of the row so that way if the user changes the value but then types in the value originally retrieved the change is disregarded and the cell's style is set
  back to NO-FILL. (Internal bug 75 - Edit Data generates wrong UPDATE query when typing identical value on cell).
- Modified a flag of calls to the SetWindowPos method that was setting the Edit Data Dialog to be Topmost of every window, now it is Topmost of only the Excel window.
  (Oracle bug 14349218 - COMMIT OVERLAY REMAINS TOP-LEVEL WHEN APP IS NOT IN FOCUS).
- Revert data resets ALL cells in the editing region to have a NO-FILL style when the Refresh Data from DB button is clicked; otherwise if the Revert Changed Data button
  is clicked only the changed cells that haven't been committed are reset to have a NO-FILL style.
  (Oracle bug 14350321 - REFRESH DATA FROM DB IS NOT CLEARING COLORED EXCEL CELLS FOR COMMITTED CELLS)
- Changed code so when changes are pushed to the MySQL Server we display an InfoDialog when errors or warnings were found during the data commit if the Auto-Commit
  checkbox is checked (no errors were thrown when in Auto-Commit mode before). (Oracle bug 14349284 - AUTO-COMMIT EDITING APPEARS TO LACK ERROR NOTIFICATION).
- Changed comparison strategy for the value the user types in an Excel cell against the value already stored in the DataTable; for this a new method in the
  DataTypeUtilities class called ExcelValueEqualsDataTableValue was created to do a comparison by data type and if what the user types equals what is in the DB
  the change is disregarded and discarded for a commit. Also changed code to process Excel Sheet changes cell by cell instead of a whole range in order to paint the
  cell's background if the change does not produce errors, in which case now the change is undone, an error is thrown and the cell is not colored; if the changed value
  equals the one in the table no change is accounted for to commit. (Internal bug 75 - Edit Data generates wrong UPDATE query when typing identical value on cell).
- Edit Data was failing in this scenario when a table's primary key is being changed by the user. Fixed code in GetUpdateSQL method of MySQLDataTable class to assemble
  the where clause using the original values in the row and not the updated values (since updated values in this scenario are not found but MySQL does not throw any
  errors or warnings about not finding such records). (Oracle bug 14349192 - COMMIT FAILS).
- Methods that handle Insert, Update and Delete operations (InsertDataWithManualQuery, AppendDataWithManualQuery, UpdateDataWithManualQuery, DeleteDataWithManualQuery)
  are using transactions which are rolled back if an error occurs. (Oracle bug 14356054 - OPTIMISTIC LOCKING CAN CAUSE PARTIAL DATA UPDATES)
- All operations done through Edit Data use now constructed queries sent directly to MySQL instead of performing the operations via the Connector/NET DataAdapter.
  This way we are consistent on how operations are performed by the Export Data and Append Data operations and ensure the query appearing on the General Query Log
  and the one we display to the users are identical. (Oracle bug 14355970 - CONFIRMATION DETAILS LIE ABOUT SQL ISSUED).
  