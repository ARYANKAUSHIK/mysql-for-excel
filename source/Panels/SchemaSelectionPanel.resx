<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="largeImages.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>21, 19</value>
  </metadata>
  <data name="largeImages.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAC8
        CwAAAk1TRnQBSQFMAwEBAAFIAQABSAEAARgBAAEYAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABYAMA
        ARgDAAEBAQABIAYAASQ2AAMBBAIEAwEEAwUBBwMFAQcDBAEFAwMBBAMDAQQDAQEC/wBRAAMBAQIDBgEI
        AwoEDgETAxEBFwMUARsDFgEfAxYBHgMUARsDEQEXAw4BEwMLAQ8DBwEJAwIBA/8ARQADBAEFAxUBHQMo
        ATwBPwJAAW4BTQJOAZYBUwJVAbABWwJeAc4BWgFeAV8B2AFVAlcBugFSAlMBqAFFAkYBfwM5AV8DJQE3
        Ax0BKQMPARQDBgEIAwEBAv8AOQADBQEHATUCNgFYAVcBaAFqAeIBMAGkAcUB/wFfAbYBzgH/AY4ByQHc
        Af8BlwHQAeIB/wGHAcsB4AH/AWsBxwHdAf8BWgHCAdsB/wFFAbkB1wH/ASoBpAHFAf8BFAGMAbEB/wEi
        AXgBmQH6A1EBogMoAT0DFAEbAwYBCP8AOQADQQFyASwBrgHQAf8BhwHWAesB/wHYAfgC/wH1A/8B7wH9
        Av8B3gH5Av8ByAH0Av8BrgHwAf4B/wGVAeoB/QH/AXQB5gH9Af8BYQHkAf0B/wFdAeMC/wF2AdoB8gH/
        AU8BqQHHAf8BWwJeAdACKwEsAUMDCQEM/wA5AAE8AY4BqgH5AYAB3gH3Af8BsgHyAv8B0gH1Av8B7AH7
        Av8B6QH6Af4B/wHaAfcB/gH/AcQB8gH9Af8BqwHuAfwB/wGSAegB+wH/AXEB4wH7Af8BXQHfAfoB/wFW
        Ad0B+gH/AZgB7AL/Ab0B8AH+Af8BNQGxAdsB/wNHAYMDBgEI/wA5AAFBAZIBrQH5AZAB6gL/AawB7gL/
        AdIB9QL/AewB+wL/AekB+gH+Af8B2gH3Af4B/wHEAfIB/QH/AasB7gH8Af8BkgHoAfsB/wFxAeMB+wH/
        AV0B3wH6Af8BVgHdAfoB/wGSAegB/AH/AcQB9wL/AUcBwQHsAf8DRwGDAwYBCP8AOQABRgGSAaQB9wGN
        AegC/wGsAe4C/wHSAfUC/wHsAfsC/wHpAfoB/gH/Ad0B+QL/AcgB9AL/Aa4B8AH+Af8BlQHqAf0B/wFy
        AeQB/AH/AV0B3wH6Af8BVgHdAfoB/wGSAegB/AH/AcIB9QL/AUUBwQHrAf8DRwGCAwYBCP8AOQABSAGS
        AaQB9wGNAegC/wGuAe8C/wHdAfsG/wH8A/8B1wH1AfwB/wG3AeoB9wH/AaEB5wH3Af8BiQHiAfYB/wF2
        AegC/wFnAekC/wFdAeUC/wGWAewC/wHCAfUC/wFFAcEB7AH/A0YBgQMFAQf/ADkAAUABnQGtAfoBlQHu
        Av8BpQHqAfwB/wGDAc0B4QH/AVEBswHOAf8BOQGmAcMB/wE+AagBxAH/AUEBqQHGAf8BOAGmAcQB/wEq
        AZ8BvgH/ARcBkQG0Af8BFAGRAbUB/wEhAaMBxgH/AXEB0QHoAf8BzgH+Av8BSgHEAe4B/wNFAX8DAgED
        /wA5AAFaAV8BYQHYAT4BugHaAf8BOwGzAdEB/wFvAccB3gH/AaoB2wHpAf8BsgHeAeoB/wGsAd4B7AH/
        AaAB3QHtAf8BjAHZAesB/wFtAdIB6QH/AVMBxwHjAf8BQgHDAeAB/wExAbMB0wH/ASsBnQG+Af8BMQGX
        AbYB/wErAZABuQH+Az8BbQMDAQT/ADkAAVgBWwFdAcsBRAG+Ad0B/wGZAeMB9gH/AcsB8gH8Af8B8AH9
        Av8B8gP/AeEB+wL/AckB9QL/AbAB8QL/AZYB6wH+Af8BdQHnAf4B/wFgAeMB/QH/AVUB3AH5Af8BhwHg
        AfUB/wFxAcEB2QH/AScBiQGeAfkDPQFpAwcBCf8AOQABTAGEAZMB8wGIAeQB/QH/Aa4B7wL/AdMB9gL/
        AewB+wL/AekB+gH+Af8B2gH3Af4B/wHEAfIB/QH/AasB7gH8Af8BkgHoAfsB/wFxAeMB+wH/AV0B3wH6
        Af8BVgHdAfoB/wGVAeoB/QH/AcAB8wL/AT4BuwHmAf8DRgGAAwYBCP8AOQABUQGWAagB9wGNAegC/wGs
        Ae4C/wHSAfUC/wHsAfsC/wHpAfoB/gH/AdoB9wH+Af8BxAHyAf0B/wGrAe4B/AH/AZIB6AH7Af8BcQHj
        AfsB/wFdAd8B+gH/AVYB3QH6Af8BkgHoAfwB/wHCAfUC/wFEAcMB7gH/A0cBggMGAQj/ADkAAVEBlwGo
        AfcBjAHoAv8BrAHuAv8B1AH2Av8B8QH9Av8B8AH9Av8B4QH6Av8BygH1Av8BsAHxAf4B/wGWAesB/QH/
        AXUB5gH+Af8BYAHiAfwB/wFXAd4B+wH/AZIB6AH8Af8BwgH1Av8BRQHEAe4B/wNHAYIDBgEI/wA5AAFR
        AZkBqAH3AY4B6QL/AbIB8QL/Ac8B9AH+Af8B0QHuAfYB/wHAAecB8QH/Aa8B4gHvAf8BnQHdAe4B/wGJ
        AdkB7AH/AWwB0wHqAf8BVgHOAeoB/wFIAc0B6gH/AU4B1gH0Af8BlwHsAv8ByQH5Av8BRQHEAe8B/wNH
        AYIDBgEI/wA5AAFRAZoBqwH3AYQB5AH8Af8BgwHZAfAB/wGQAdgB6wH/AYQB0AHkAf8BbgHKAeEB/wFl
        AcUB3QH/AWEBwgHcAf8BXwHAAdoB/wFaAb0B2AH/AU0BuQHXAf8BRAG2AdYB/wE8AbkB2gH/AV0BxgHg
        Af8BnwHfAfAB/wFHAcYB8AH/A0cBggMGAQj/ADkAAUwBlgGoAfcBXQHPAesB/wFwAdAB6AH/AYgB1gHt
        Af8BqQHmAfgB/wG/AfEC/wHDAfMC/wHCAfMC/wG7AfAC/wGzAe4C/wGqAesC/wGVAeIB/QH/AWUBywHr
        Af8BUwG6AdoB/wFZAbsB2wH/ASgBrgHZAf8DRwGCAwYBCP8AOQABRAGcAbAB+QGZAd8B8gH/AcIB8QL/
        AcAB8QL/AbsB7gH+Af8BuQHtAf0B/wG3Ae0B/QH/AbAB6wH9Af8BqAHoAf0B/wGeAeQB/QH/AZEB4QH9
        Af8BjQHgAf4B/wGWAeQC/wGpAewC/wGlAeQB+AH/AUYBuQHdAf8DRgGAAwIBA/8AOQABPgG/Ad8B/wHG
        AfIC/wG6Ae4B/QH/AbgB7QH9Af8BuQHtAf0B/wG4Ae0B/QH/AbEB6wH9Af8BqAHoAf0B/wGdAeQB/QH/
        AZQB4QH9Af8BkgHhAf4B/wGcAeIB/gH/AakB5wH+Af8BtwHrAv8B2QH8Av8BhAHWAfIB/wNEAXr/AD0A
        AUUCRgF/AWMBzAHmAf8BtAHrAfsB/wHBAfEC/wG7Ae4B/gH/AbMB7AH+Af8BqQHoAf0B/wGeAeUB/QH/
        AZUB4QH9Af8BlAHiAf4B/wGdAeQC/wGpAecC/wG8Ae4C/wHLAfIC/wGYAdIB5wH/AVsBXAFdAcgDGgEk
        /wA9AAMEAQYDMgFRAVABfgGGAe8BXAHIAeMB/wGIAdcB7gH/AZEB3QH0Af8BlAHfAfgB/wGVAeIB/gH/
        AZQB4gL/AZIB4AH9Af8BhwHXAfMB/wGEAdIB7AH/AWIBwAHcAf8BOgGuAdEB/wNQAZoDEQEX/wBJAAMN
        ARIDFgEeATwCPQFnAVQCVgGrAVkBXAFeAcwBWgFmAWsB4AFYAWYBbQHjAVoBYAFiAdYBVgJXAbgDSgGM
        AyQBNQMQARUDBgEI/wD/ALYAAUIBTQE+BwABPgMAASgDAAFgAwABGAMAAQEBAAEBBQABIAEBFgAD/wEA
        Af8BgAE/CQAB/AEAAQ8JAAH4AQABAwkAAfABAAEDCQAB8AEAAQMJAAHwAQABAwkAAfABAAEDCQAB8AEA
        AQMJAAHwAQABAwkAAfABAAEDCQAB8AEAAQMJAAHwAQABAwkAAfABAAEDCQAB8AEAAQMJAAHwAQABAwkA
        AfABAAEDCQAB8AEAAQMJAAHwAQABAwkAAfABAAEDCQAB8AEAAQcJAAHwAQABBwkAAfABAAEPCQAB/AEA
        AR8JAAP/CQAL
</value>
  </data>
</root>