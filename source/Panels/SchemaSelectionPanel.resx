<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="largeImages.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>21, 19</value>
  </metadata>
  <data name="largeImages.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACu
        CwAAAk1TRnQBSQFMAwEBAAFYAQABWAEAARgBAAEYAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABYAMA
        ARgDAAEBAQABIAYAASQ2AAMBBAIEAwEEAwUBBwMFAQcDBAEFAwMBBAMDAQQDAQEC/wBRAAMBAQIDBgEI
        AwoEDgETAxEBFwMUARsDFgEfAxYBHgMUARsDEQEXAw4BEwMLAQ8DBwEJAwIBA/8ARQADBAEFAxUBHQMo
        ATwBPwJAAW4BTQJOAZYBUwJVAbABXAJeAc4BWgJeAdgBVQJXAboBUgJTAagBRQJGAX8DOQFfAyUBNwMd
        ASkDDwEUAwYBCAMBAQL/ADkAAwUBBwE1AjYBWAFaAWQBZQHiAS4BpAHFAf8BXQG2Ac4B/wGOAckB3AH/
        AZcB0AHiAf8BhwHLAeAB/wFpAccB3QH/AVgBwgHbAf8BQwG5AdcB/wEoAaQBxQH/ARIBjAGxAf8BJAF2
        AZMB+gNRAaIDKAE9AxQBGwMGAQj/ADkAA0EBcgEqAa4B0AH/AYcB1gHrAf8B2AH4Av8B9QP/Ae8B/QL/
        Ad4B+QL/AcgB9AL/Aa4B8AH+Af8BlQHqAf0B/wFyAeYB/QH/AV8B5AH9Af8BWwHjAv8BdAHaAfIB/wFN
        AakBxwH/AVsCXgHQAisBLAFDAwkBDP8AOQABQAGMAaIB+QGAAd4B9wH/AbIB8gL/AdIB9QL/AewB+wL/
        AekB+gH+Af8B2gH3Af4B/wHEAfIB/QH/AasB7gH8Af8BkgHoAfsB/wFvAeMB+wH/AVsB3wH6Af8BVAHd
        AfoB/wGYAewC/wG9AfAB/gH/ATMBsQHbAf8DRwGDAwYBCP8AOQABQQGOAaYB+QGQAeoC/wGsAe4C/wHS
        AfUC/wHsAfsC/wHpAfoB/gH/AdoB9wH+Af8BxAHyAf0B/wGrAe4B/AH/AZIB6AH7Af8BbwHjAfsB/wFb
        Ad8B+gH/AVQB3QH6Af8BkgHoAfwB/wHEAfcC/wFFAcEB7AH/A0cBgwMGAQj/ADkAAUoBjAGeAfcBjQHo
        Av8BrAHuAv8B0gH1Av8B7AH7Av8B6QH6Af4B/wHdAfkC/wHIAfQC/wGuAfAB/gH/AZUB6gH9Af8BcAHk
        AfwB/wFbAd8B+gH/AVQB3QH6Af8BkgHoAfwB/wHCAfUC/wFDAcEB6wH/A0cBggMGAQj/ADkAAUwBjAGe
        AfcBjQHoAv8BrgHvAv8B3QH7Bv8B/AP/AdcB9QH8Af8BtwHqAfcB/wGhAecB9wH/AYkB4gH2Af8BdAHo
        Av8BZQHpAv8BWwHlAv8BlgHsAv8BwgH1Av8BQwHBAewB/wNGAYEDBQEH/wA5AAFCAZkBpwH6AZUB7gL/
        AaUB6gH8Af8BgwHNAeEB/wFPAbMBzgH/ATcBpgHDAf8BPAGoAcQB/wE/AakBxgH/ATYBpgHEAf8BKAGf
        Ab4B/wEVAZEBtAH/ARIBkQG1Af8BHwGjAcYB/wFvAdEB6AH/Ac4B/gL/AUgBxAHuAf8DRQF/AwIBA/8A
        OQABWgJeAdgBPAG6AdoB/wE5AbMB0QH/AW0BxwHeAf8BqgHbAekB/wGyAd4B6gH/AawB3gHsAf8BoAHd
        Ae0B/wGMAdkB6wH/AWsB0gHpAf8BUQHHAeMB/wFAAcMB4AH/AS8BswHTAf8BKQGdAb4B/wEvAZcBtgH/
        ASsBjAG1Af4DPwFtAwMBBP8AOQABWAJbAcsBQgG+Ad0B/wGZAeMB9gH/AcsB8gH8Af8B8AH9Av8B8gP/
        AeEB+wL/AckB9QL/AbAB8QL/AZYB6wH+Af8BcwHnAf4B/wFeAeMB/QH/AVMB3AH5Af8BhwHgAfUB/wFv
        AcEB2QH/ASkBhwGWAfkDPQFpAwcBCf8AOQABTAGAAYkB8wGIAeQB/QH/Aa4B7wL/AdMB9gL/AewB+wL/
        AekB+gH+Af8B2gH3Af4B/wHEAfIB/QH/AasB7gH8Af8BkgHoAfsB/wFvAeMB+wH/AVsB3wH6Af8BVAHd
        AfoB/wGVAeoB/QH/AcAB8wL/ATwBuwHmAf8DRgGAAwYBCP8AOQABUQGOAaEB9wGNAegC/wGsAe4C/wHS
        AfUC/wHsAfsC/wHpAfoB/gH/AdoB9wH+Af8BxAHyAf0B/wGrAe4B/AH/AZIB6AH7Af8BbwHjAfsB/wFb
        Ad8B+gH/AVQB3QH6Af8BkgHoAfwB/wHCAfUC/wFCAcMB7gH/A0cBggMGAQj/ADkAAVEBjwGhAfcBjAHo
        Av8BrAHuAv8B1AH2Av8B8QH9Av8B8AH9Av8B4QH6Av8BygH1Av8BsAHxAf4B/wGWAesB/QH/AXMB5gH+
        Af8BXgHiAfwB/wFVAd4B+wH/AZIB6AH8Af8BwgH1Av8BQwHEAe4B/wNHAYIDBgEI/wA5AAFRAZEBoQH3
        AY4B6QL/AbIB8QL/Ac8B9AH+Af8B0QHuAfYB/wHAAecB8QH/Aa8B4gHvAf8BnQHdAe4B/wGJAdkB7AH/
        AWoB0wHqAf8BVAHOAeoB/wFGAc0B6gH/AUwB1gH0Af8BlwHsAv8ByQH5Av8BQwHEAe8B/wNHAYIDBgEI
        /wA5AAFRAZIBpAH3AYQB5AH8Af8BgwHZAfAB/wGQAdgB6wH/AYQB0AHkAf8BbAHKAeEB/wFjAcUB3QH/
        AV8BwgHcAf8BXQHAAdoB/wFYAb0B2AH/AUsBuQHXAf8BQgG2AdYB/wE6AbkB2gH/AVsBxgHgAf8BnwHf
        AfAB/wFFAcYB8AH/A0cBggMGAQj/ADkAAVABjgGhAfcBWwHPAesB/wFuAdAB6AH/AYgB1gHtAf8BqQHm
        AfgB/wG/AfEC/wHDAfMC/wHCAfMC/wG7AfAC/wGzAe4C/wGqAesC/wGVAeIB/QH/AWMBywHrAf8BUQG6
        AdoB/wFXAbsB2wH/ASYBrgHZAf8DRwGCAwYBCP8AOQABRAGUAaoB+QGZAd8B8gH/AcIB8QL/AcAB8QL/
        AbsB7gH+Af8BuQHtAf0B/wG3Ae0B/QH/AbAB6wH9Af8BqAHoAf0B/wGeAeQB/QH/AZEB4QH9Af8BjQHg
        Af4B/wGWAeQC/wGpAewC/wGlAeQB+AH/AUQBuQHdAf8DRgGAAwIBA/8AOQABPAG/Ad8B/wHGAfIC/wG6
        Ae4B/QH/AbgB7QH9Af8BuQHtAf0B/wG4Ae0B/QH/AbEB6wH9Af8BqAHoAf0B/wGdAeQB/QH/AZQB4QH9
        Af8BkgHhAf4B/wGcAeIB/gH/AakB5wH+Af8BtwHrAv8B2QH8Av8BhAHWAfIB/wNEAXr/AD0AAUUCRgF/
        AWEBzAHmAf8BtAHrAfsB/wHBAfEC/wG7Ae4B/gH/AbMB7AH+Af8BqQHoAf0B/wGeAeUB/QH/AZUB4QH9
        Af8BlAHiAf4B/wGdAeQC/wGpAecC/wG8Ae4C/wHLAfIC/wGYAdIB5wH/A1sByAMaAST/AD0AAwQBBgMy
        AVEBVAF1AX4B7wFaAcgB4wH/AYgB1wHuAf8BkQHdAfQB/wGUAd8B+AH/AZUB4gH+Af8BlAHiAv8BkgHg
        Af0B/wGHAdcB8wH/AYQB0gHsAf8BYAHAAdwB/wE4Aa4B0QH/A1ABmgMRARf/AEkAAw0BEgMWAR4BPAI9
        AWcBVAJWAasBWQJcAcwBXAFkAWYB4AFYAWQBZgHjAVsCYAHWAVYCVwG4A0oBjAMkATUDEAEVAwYBCP8A
        /wC2AAFCAU0BPgcAAT4DAAEoAwABYAMAARgDAAEBAQABAQUAASABARYAA/8BAAH/AYABPwkAAfwBAAEP
        CQAB+AEAAQMJAAHwAQABAwkAAfABAAEDCQAB8AEAAQMJAAHwAQABAwkAAfABAAEDCQAB8AEAAQMJAAHw
        AQABAwkAAfABAAEDCQAB8AEAAQMJAAHwAQABAwkAAfABAAEDCQAB8AEAAQMJAAHwAQABAwkAAfABAAED
        CQAB8AEAAQMJAAHwAQABAwkAAfABAAEHCQAB8AEAAQcJAAHwAQABDwkAAfwBAAEfCQAD/wkACw==
</value>
  </data>
</root>