<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="largeImages.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>21, 19</value>
  </metadata>
  <data name="largeImages.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACm
        CwAAAk1TRnQBSQFMAwEBAAGoAQABqAEAARgBAAEYAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABYAMA
        ARgDAAEBAQABIAYAASQ2AAMBBAIEAwEEAwUBBwMFAQcDBAEFAwMBBAMDAQQDAQEC/wBRAAMBAQIDBgEI
        AwoEDgETAxEBFwMUARsDFgEfAxYBHgMUARsDEQEXAw4BEwMLAQ8DBwEJAwIBA/8ARQADBAEFAxUBHQMo
        ATwBPwJAAW4BTQJOAZYBUwJVAbABXAJeAc4BWgJeAdgBVQJXAboBUgJTAagBRQJGAX8DOQFfAyUBNwMd
        ASkDDwEUAwYBCAMBAQL/ADkAAwUBBwE1AjYBWAFdAmEB4gEkAaQBxQH/AVMBtgHOAf8BjgHJAdwB/wGX
        AdAB4gH/AYcBywHgAf8BXwHHAd0B/wFOAcIB2wH/ATkBuQHXAf8BHgGkAcUB/wEIAYwBsQH/ASkBbAF7
        AfoDUQGiAygBPQMUARsDBgEI/wA5AANBAXIBIAGuAdAB/wGHAdYB6wH/AdgB+AL/AfUD/wHvAf0C/wHe
        AfkC/wHIAfQC/wGuAfAB/gH/AZUB6gH9Af8BaAHmAf0B/wFVAeQB/QH/AVEB4wL/AWoB2gHyAf8BQwGp
        AccB/wFbAl4B0AIrASwBQwMJAQz/ADkAAUEBggGKAfkBgAHeAfcB/wGyAfIC/wHSAfUC/wHsAfsC/wHp
        AfoB/gH/AdoB9wH+Af8BxAHyAf0B/wGrAe4B/AH/AZIB6AH7Af8BZQHjAfsB/wFRAd8B+gH/AUoB3QH6
        Af8BmAHsAv8BvQHwAf4B/wEpAbEB2wH/A0cBgwMGAQj/ADkAAUEBhAGLAfkBkAHqAv8BrAHuAv8B0gH1
        Av8B7AH7Av8B6QH6Af4B/wHaAfcB/gH/AcQB8gH9Af8BqwHuAfwB/wGSAegB+wH/AWUB4wH7Af8BUQHf
        AfoB/wFKAd0B+gH/AZIB6AH8Af8BxAH3Av8BOwHBAewB/wNHAYMDBgEI/wA5AAFRAYEBhgH3AY0B6AL/
        AawB7gL/AdIB9QL/AewB+wL/AekB+gH+Af8B3QH5Av8ByAH0Av8BrgHwAf4B/wGVAeoB/QH/AWYB5AH8
        Af8BUQHfAfoB/wFKAd0B+gH/AZIB6AH8Af8BwgH1Av8BOQHBAesB/wNHAYIDBgEI/wA5AAFRAYEBhgH3
        AY0B6AL/Aa4B7wL/Ad0B+wb/AfwD/wHXAfUB/AH/AbcB6gH3Af8BoQHnAfcB/wGJAeIB9gH/AWoB6AL/
        AVsB6QL/AVEB5QL/AZYB7AL/AcIB9QL/ATkBwQHsAf8DRgGBAwUBB/8AOQABTAF9AZAB+gGVAe4C/wGl
        AeoB/AH/AYMBzQHhAf8BRQGzAc4B/wEtAaYBwwH/ATIBqAHEAf8BNQGpAcYB/wEsAaYBxAH/AR4BnwG+
        Af8BCwGRAbQB/wEIAZEBtQH/ARUBowHGAf8BZQHRAegB/wHOAf4C/wE+AcQB7gH/A0UBfwMCAQP/ADkA
        AVoCXgHYATIBugHaAf8BLwGzAdEB/wFjAccB3gH/AaoB2wHpAf8BsgHeAeoB/wGsAd4B7AH/AaAB3QHt
        Af8BjAHZAesB/wFhAdIB6QH/AUcBxwHjAf8BNgHDAeAB/wElAbMB0wH/AR8BnQG+Af8BJQGXAbYB/wEr
        AX8BoQH+Az8BbQMDAQT/ADkAAVgCWwHLATgBvgHdAf8BmQHjAfYB/wHLAfIB/AH/AfAB/QL/AfID/wHh
        AfsC/wHJAfUC/wGwAfEC/wGWAesB/gH/AWkB5wH+Af8BVAHjAf0B/wFJAdwB+QH/AYcB4AH1Af8BZQHB
        AdkB/wE7AXoBhwH5Az0BaQMHAQn/ADkAAUwBbAFvAfMBiAHkAf0B/wGuAe8C/wHTAfYC/wHsAfsC/wHp
        AfoB/gH/AdoB9wH+Af8BxAHyAf0B/wGrAe4B/AH/AZIB6AH7Af8BZQHjAfsB/wFRAd8B+gH/AUoB3QH6
        Af8BlQHqAf0B/wHAAfMC/wEyAbsB5gH/A0YBgAMGAQj/ADkAAVEBggGHAfcBjQHoAv8BrAHuAv8B0gH1
        Av8B7AH7Av8B6QH6Af4B/wHaAfcB/gH/AcQB8gH9Af8BqwHuAfwB/wGSAegB+wH/AWUB4wH7Af8BUQHf
        AfoB/wFKAd0B+gH/AZIB6AH8Af8BwgH1Av8BOAHDAe4B/wNHAYIDBgEI/wA5AAFRAYIBhwH3AYwB6AL/
        AawB7gL/AdQB9gL/AfEB/QL/AfAB/QL/AeEB+gL/AcoB9QL/AbAB8QH+Af8BlgHrAf0B/wFpAeYB/gH/
        AVQB4gH8Af8BSwHeAfsB/wGSAegB/AH/AcIB9QL/ATkBxAHuAf8DRwGCAwYBCP8AOQABUQGCAYcB9wGO
        AekC/wGyAfEC/wHPAfQB/gH/AdEB7gH2Af8BwAHnAfEB/wGvAeIB7wH/AZ0B3QHuAf8BiQHZAewB/wFg
        AdMB6gH/AUoBzgHqAf8BPAHNAeoB/wFCAdYB9AH/AZcB7AL/AckB+QL/ATkBxAHvAf8DRwGCAwYBCP8A
        OQABUQGDAYgB9wGEAeQB/AH/AYMB2QHwAf8BkAHYAesB/wGEAdAB5AH/AWIBygHhAf8BWQHFAd0B/wFV
        AcIB3AH/AVMBwAHaAf8BTgG9AdgB/wFBAbkB1wH/ATgBtgHWAf8BMAG5AdoB/wFRAcYB4AH/AZ8B3wHw
        Af8BOwHGAfAB/wNHAYIDBgEI/wA5AAFRAYIBhwH3AVEBzwHrAf8BZAHQAegB/wGIAdYB7QH/AakB5gH4
        Af8BvwHxAv8BwwHzAv8BwgHzAv8BuwHwAv8BswHuAv8BqgHrAv8BlQHiAf0B/wFZAcsB6wH/AUcBugHa
        Af8BTQG7AdsB/wEcAa4B2QH/A0cBggMGAQj/ADkAAUQBhwGMAfkBmQHfAfIB/wHCAfEC/wHAAfEC/wG7
        Ae4B/gH/AbkB7QH9Af8BtwHtAf0B/wGwAesB/QH/AagB6AH9Af8BngHkAf0B/wGRAeEB/QH/AY0B4AH+
        Af8BlgHkAv8BqQHsAv8BpQHkAfgB/wE6AbkB3QH/A0YBgAMCAQP/ADkAATIBvwHfAf8BxgHyAv8BugHu
        Af0B/wG4Ae0B/QH/AbkB7QH9Af8BuAHtAf0B/wGxAesB/QH/AagB6AH9Af8BnQHkAf0B/wGUAeEB/QH/
        AZIB4QH+Af8BnAHiAf4B/wGpAecB/gH/AbcB6wL/AdkB/AL/AYQB1gHyAf8DRAF6/wA9AAFFAkYBfwFX
        AcwB5gH/AbQB6wH7Af8BwQHxAv8BuwHuAf4B/wGzAewB/gH/AakB6AH9Af8BngHlAf0B/wGVAeEB/QH/
        AZQB4gH+Af8BnQHkAv8BqQHnAv8BvAHuAv8BywHyAv8BmAHSAecB/wNbAcgDGgEk/wA9AAMEAQYDMgFR
        AVgBYgFkAe8BUAHIAeMB/wGIAdcB7gH/AZEB3QH0Af8BlAHfAfgB/wGVAeIB/gH/AZQB4gL/AZIB4AH9
        Af8BhwHXAfMB/wGEAdIB7AH/AVYBwAHcAf8BLgGuAdEB/wNQAZoDEQEX/wBJAAMNARIDFgEeATwCPQFn
        AVQCVgGrAVkCXAHMA18B4AFYAl8B4wFbAmAB1gFWAlcBuANKAYwDJAE1AxABFQMGAQj/AP8AtgABQgFN
        AT4HAAE+AwABKAMAAWADAAEYAwABAQEAAQEFAAEgAQEWAAP/AQAB/wGAAT8JAAH8AQABDwkAAfgBAAED
        CQAB8AEAAQMJAAHwAQABAwkAAfABAAEDCQAB8AEAAQMJAAHwAQABAwkAAfABAAEDCQAB8AEAAQMJAAHw
        AQABAwkAAfABAAEDCQAB8AEAAQMJAAHwAQABAwkAAfABAAEDCQAB8AEAAQMJAAHwAQABAwkAAfABAAED
        CQAB8AEAAQMJAAHwAQABBwkAAfABAAEHCQAB8AEAAQ8JAAH8AQABHwkAA/8JAAs=
</value>
  </data>
</root>